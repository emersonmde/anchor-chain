var searchIndex = new Map(JSON.parse('[\
["anchor_chain",{"t":"GEEPPFEPEEEEPEEEPEPFEPFNNNNNNNNCNNNNENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNOCOCCNNNNNENNNNNNNNNNNNNNNNNNNCNNNNNFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCKMMPPPFFFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNRFKRKKNNNNNNNNNNNMNMNNNNNCCFNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNFNNNNNNNONNNONHNNNNNCFFNNNNNNNNNNNNNOONNNNNNNONNNNONNNNONNNNNNNNNNN","n":["AnchorChainError","ChainBuilder","Document","EmptyResponseError","InvalidInputError","Link","Logger","ModelError","NoOpNode","Node","OpenAIChatModel","OpenAIEmbeddingModel","OpenAIError","OpenAIInstructModel","OpenAIModel","ParallelNode","ParseError","Prompt","RequestError","StateManager","Stateless","TeraTemplateError","ToolRegistry","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain","clear","clone","clone_into","contains_key","ctor","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","execute_tool","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get","get_schema","init","init","init","init","insert","into","into","into","into","is_empty","keys","len","models","new","new","new","next","node","node","nodes","parallel_node","process","read","register_tool","remove","source","to_boxed_future","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","values","vector","vzip","vzip","vzip","vzip","write","Chain","ChainBuilder","LinkedChainBuilder","StatefulLinkedChainBuilder","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","fmt","from","from","from","from","init","init","init","init","into","into","into","into","link","link","link","link_with_state","link_with_state","link_with_state","new","new","process","process","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","embedding_model","openai","EmbeddingModel","dimensions","embed","GPT3_5Turbo","GPT3_5TurboInstruct","GPT4Turbo","OpenAIChatModel","OpenAIEmbeddingModel","OpenAIInstructModel","OpenAIModel","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","dimensions","drop","drop","drop","drop","embed","fmt","fmt","fmt","fmt","from","from","from","from","init","init","init","init","into","into","into","into","new_gpt3_5_turbo","new_gpt3_5_turbo_instruct","new_gpt4_turbo","new_with_key","new_with_key","process","process","process","process","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","Input","NoOpNode","Node","Output","Stateful","Stateless","borrow","borrow_mut","default","deref","deref_mut","drop","fmt","from","init","into","new","process","process","set_state","try_from","try_into","try_into","type_id","vzip","logger","prompt","Logger","borrow","borrow_mut","default","deref","deref_mut","drop","fmt","from","init","into","new","process","try_from","try_into","try_into","type_id","vzip","Prompt","borrow","borrow_mut","deref","deref_mut","drop","fmt","from","init","into","new","process","try_from","try_into","try_into","type_id","vzip","ParallelNode","borrow","borrow_mut","deref","deref_mut","drop","fmt","from","function","init","into","new","nodes","process","to_boxed_future","try_from","try_into","try_into","type_id","vzip","document","DocCollection","Document","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","embedding","embedding_name","fmt","from","from","from","from","from","from_iter","id","init","init","into","into","metadata","new","new_with_embedding","new_with_id","serialize","text","to_owned","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","vzip","vzip"],"q":[[0,"anchor_chain"],[117,"anchor_chain::chain"],[187,"anchor_chain::models"],[189,"anchor_chain::models::embedding_model"],[192,"anchor_chain::models::openai"],[267,"anchor_chain::node"],[292,"anchor_chain::nodes"],[294,"anchor_chain::nodes::logger"],[312,"anchor_chain::nodes::prompt"],[329,"anchor_chain::parallel_node"],[349,"anchor_chain::vector"],[350,"anchor_chain::vector::document"],[396,"anchor_chain::state_manager"],[397,"core::cmp"],[398,"core::hash"],[399,"core::clone"],[400,"anchor_chain::agents::tool_registry"],[401,"serde_json::value"],[402,"alloc::string"],[403,"core::result"],[404,"anchor_chain::error"],[405,"core::fmt"],[406,"anchor_chain::link"],[407,"serde_json::error"],[408,"async_openai::error"],[409,"tera::errors"],[410,"core::option"],[411,"alloc::vec"],[412,"core::future::future"],[413,"alloc::boxed"],[414,"core::pin"],[415,"core::marker"],[416,"std::collections::hash::map"],[417,"tokio::sync::rwlock::read_guard"],[418,"serde::ser"],[419,"core::ops::function"],[420,"core::error"],[421,"core::any"],[422,"tokio::sync::rwlock::write_guard"],[423,"async_openai::types::chat"],[424,"core::convert"],[425,"serde::de"],[426,"core::iter::traits::collect"]],"i":[0,0,0,13,13,0,0,13,0,0,0,0,13,0,0,0,13,0,13,0,0,13,0,7,13,16,1,7,13,16,1,0,1,1,1,1,0,7,1,7,13,16,1,7,13,16,1,7,13,16,1,7,13,13,16,1,7,13,13,13,13,16,1,1,7,7,13,16,1,1,7,13,16,1,1,1,1,0,7,16,1,16,0,16,0,0,16,1,7,1,13,0,1,13,7,13,16,1,7,7,13,13,16,16,1,1,7,13,16,1,1,0,7,13,16,1,1,0,0,0,0,41,38,40,39,41,38,40,39,38,40,41,41,38,40,39,41,38,40,39,41,38,40,39,39,41,38,40,39,41,38,40,39,41,38,40,39,41,38,40,41,38,40,41,39,39,39,41,38,40,39,41,41,38,38,40,40,39,39,41,38,40,39,41,38,40,39,0,0,0,44,44,50,50,50,0,0,0,0,46,47,45,50,46,47,45,50,45,46,47,45,50,46,47,45,50,45,46,47,45,50,45,46,47,45,50,46,47,45,50,46,47,45,50,46,47,45,50,50,50,50,46,47,46,47,45,50,46,47,45,50,46,46,47,47,45,45,50,50,46,47,45,50,46,47,45,50,26,0,0,26,0,0,52,52,52,52,52,52,52,52,52,52,52,26,52,43,52,52,52,52,52,0,0,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,0,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,0,55,55,55,55,55,55,55,55,55,55,55,55,55,0,55,55,55,55,55,0,0,0,58,56,58,56,56,56,58,56,58,56,56,58,56,56,56,56,58,58,56,56,56,58,56,58,56,58,56,56,56,56,56,56,56,56,58,56,58,58,56,56,58,56,58,56],"f":"```````````````````````{ce{}{}}0000000`{{{b{ce}}}d{fhj}j}{{{b{ce}}}{{b{ce}}}jj}{{ce}d{}{}}{{{b{ce}}c}l{fhj}j}`{{}n}{{}{{b{ce}}}{fhj}j}{A`c{}}0000000{A`d}000{{nAbAd}{{Ah{AdAf}}}}{{AjAl}An}0{{{B`{ce}}Al}An{BbBb}{BbBb}}{{{b{ce}}Al}AnBbBb}{cc{}}{BdAj}{BfAj}{BhAj}333{{{b{ce}}c}{{Bj{e}}}{fhj}j}{{nAb}{{Ah{AdAf}}}}{{}A`}000{{{b{ce}}ce}d{fhj}j}{ce{}{}}000{{{b{ce}}}l{fhj}j}{{{b{ce}}}{{Bl{c}}}{fhj}j}{{{b{ce}}}A`{fhj}j}`{{}n}{{ce}{{B`{ce}}}BbBb}{{}{{b{ce}}}{fhj}j}`````{{{B`{ce}}g}{{Cb{{C`{Bn}}}}}{CdCfChBb}{{Cd{}{{Cj{}}}}CfChBb}{}}{{{b{ce}}}{{Cn{{Cl{ce}}}}}{fhj}j}{{nAbeAd}dD`{CfCh{Dd{Ad}{{Db{c}}}}}}={Aj{{Bj{Df}}}}`:{cAf{}}{c{{Ah{e}}}{}{}}000{c{{Cb{{C`{Bn}}}}}{}}1011001{cDh{}}000{{{b{ce}}}{{Bl{e}}}{fhj}j}`????{{{b{ce}}}{{Dj{{Cl{ce}}}}}{fhj}j}````{ce{}{}}0000000{{{Dl{ce}}}{{Dn{ce}}}Cf{Cd{Cd{}{{Cj{c}}}}CfChBb}}{{{E`{cegi}}}{{Dn{ce}}}Cf{Cd{Cd{}{{Cj{c}}}}CfChBb}{jCfBb}{jCfBb}}{{}Eb}{A`c{}}0000000{A`d}000{{{Dn{ceg}}Al}AnBbBbBb}{cc{}}000{{}A`}0008888{{Ebe}{{Dl{ce}}}Cf{{Cd{}{{Cj{c}}}}EdCfChBb}}{{{Dl{ce}}g}{{Dl{c{B`{eg}}}}}Cf{{Cd{}{{Cj{c}}}}CfChBb}{{Cd{}{{Cj{}}}}EdCfChBb}}{{{E`{cegi}}k}{{E`{c{B`{ek}}gi}}}Cf{{Cd{}{{Cj{c}}}}CfChBb}{jCfBb}{jCfBb}{{Cd{}{{Cj{}}}}EdCfChBb}}{{Ebi}{{E`{cieg}}}Cf{fhj}j{{Cd{}{{Cj{c}}}}{Ef{eg}}CfChBb}}{{{Dl{ce}}k}{{E`{c{`{ekgi}}gi}}}Cf{{Cd{}{{Cj{c}}}}CfChBb}{fhjCfBb}{jCfBb}{{Cd{}{{Cj{}}}}{Ef{gi}}CfChBb}}{{{E`{cegi}}k}{{E`{c{`{ekgi}}gi}}}Cf{{Cd{}{{Cj{c}}}}CfChBb}{jCfBb}{jCfBb}{{Cd{}{{Cj{}}}}{Ef{gi}}CfChBb}};{g{{Dn{ceg}}}BbBb{{Cd{}{{Cj{c}}{Db{e}}}}CfChBb}}{{{Dn{ceg}}c}{{Ah{eAj}}}BbBb{{Cd{}{{Cj{c}}{Db{e}}}}CfChBb}}{{{Dn{ceg}}i}{{Cb{{C`{Bn}}}}}{BbCfCh}{BbCfCh}{{Cd{}{{Cj{c}}{Db{e}}}}CfChBb}{}}{c{{Ah{e}}}{}{}}0000{c{{Cb{{C`{Bn}}}}}{}}010110{cDh{}}000{ce{}{}}000```{EhA`}{{EhAf}{{Cb{{C`{Bn}}}}}}```````22222222{{}Ej}{A`c{}}0000000{EjA`}{A`d}000{{EjAf}{{Cb{{C`{Bn}}}}}}{{{El{c}}Al}An{}}{{{En{c}}Al}An{{Fb{F`}}}}{{EjAl}An}{{{Fd{c}}Al}An{CfChBb{Fb{F`}}{Fb{Ff}}Bb}}{cc{}}000{{}A`}000===={Ab{{Fd{c}}}{CfChBb{Fb{F`}}{Fb{Ff}}}}{{}{{Fd{c}}}{CfChBb{Fb{F`}}{Fb{Ff}}}}1{{AfAfAf}{{El{c}}}{}}{{AfAf}{{En{c}}}{{Fb{F`}}}}{{{El{c}}e}{{Cb{{C`{Bn}}}}}{{Fb{Ff}}BbCfCh}{}}{{{En{c}}e}{{Cb{{C`{Bn}}}}}{{Fb{F`}}BbCfCh}{}}{{Ejc}{{Cb{{C`{Bn}}}}}{}}{{{Fd{c}}e}{{Cb{{C`{Bn}}}}}{CfChBb{Fb{F`}}{Fb{Ff}}}{}}{c{{Ah{e}}}{}{}}000{c{{Cb{{C`{Bn}}}}}{}}1011001{cDh{}}000{ce{}{}}000``````00{{}{{Fh{c}}}Bb}{A`c{}}0{A`d}{{{Fh{c}}Al}An{BbBb}}{cc{}}{{}A`}65{{{Cd{}{{Cj{c}}{Db{e}}}}c}{{Cb{{C`{Bn}}}}}{}{}}{{{Fh{c}}e}{{Cb{{C`{Bn}}}}}{CfChBb}{}}{{Ef{b{ce}}}{{Cb{{C`{Bn}}}}}{}{}}<<;:9```99{{}{{Fj{c}}}{BbCfCh}}887{{{Fj{c}}Al}An{BbCfChBb}}65;{Ab{{Fj{c}}}{BbCfCh}}{{{Fj{c}}e}{{Cb{{C`{Bn}}}}}{BbCfCh}{}}{c{{Ah{e}}}{}{}}0{c{{Cb{{C`{Bn}}}}}{}}{cDh{}}{ce{}{}}`00??>{{FlAl}An}=<1{AbFl}{{Flc}{{Cb{{C`{Bn}}}}}{}}65643`33{A`c{}}0{A`d}{{{Fn{ceg}}Al}An{BbjCfCh}{BbCfCh}{BbCfCh}}{cc{}}`{{}A`}8{{{Bl{{C`{Cd}}}}{C`{Dd}}}{{Fn{ceg}}}{jCfChBb}{CfChBb}{CfChBb}}`{{{Fn{ceg}}i}{{Cb{{C`{Bn}}}}}{jCfChBb}{CfChBb}{CfChBb}{}}{g{{C`{Dd}}}Cf{}{{Dd{c}{{Db{{Ah{eAj}}}}}}CfChj}}>>=<;```;;;;{G`G`}{{ce}d{}{}}9999{c{{Ah{G`}}}Gb}99``{{G`Al}An}8{{{Bl{Af}}}Gd}9{AbG`}{AfG`}{eGd{{Fb{G`}}}{{Gh{}{{Gf{c}}}}}}`;;{ce{}{}}0`2{{Af{Bl{Gj}}Af}G`}{{AfAf}G`}{{G`c}AhGl}`3{c{{Ah{e}}}{}{}}00{c{{Cb{{C`{Bn}}}}}{}}01{cDh{}}066","D":"Nf","p":[[5,"StateManager",0,396],[1,"unit"],[10,"Eq",397],[10,"Hash",398],[10,"Clone",399],[1,"bool"],[5,"ToolRegistry",0,400],[1,"usize"],[1,"str"],[6,"Value",401],[5,"String",402],[6,"Result",403],[6,"AnchorChainError",0,404],[5,"Formatter",405],[8,"Result",405],[5,"Link",0,406],[10,"Debug",405],[5,"Error",407],[6,"OpenAIError",408],[5,"Error",409],[6,"Option",410],[5,"Vec",411],[10,"Future",412],[5,"Box",413],[5,"Pin",414],[10,"Node",267],[10,"Send",415],[10,"Sync",415],[17,"Input"],[5,"HashMap",416],[5,"RwLockReadGuard",417],[10,"Serialize",418],[17,"Output"],[10,"Fn",419],[10,"Error",420],[5,"TypeId",421],[5,"RwLockWriteGuard",422],[5,"LinkedChainBuilder",117],[5,"Chain",117],[5,"StatefulLinkedChainBuilder",117],[5,"ChainBuilder",117],[10,"Stateless",267],[10,"Stateful",267],[10,"EmbeddingModel",189],[5,"OpenAIEmbeddingModel",192],[5,"OpenAIChatModel",192],[5,"OpenAIInstructModel",192],[6,"Prompt",423],[10,"Into",424],[6,"OpenAIModel",192],[6,"ChatCompletionRequestUserMessageContent",423],[5,"NoOpNode",267],[5,"Logger",294],[5,"Prompt",312],[5,"ParallelNode",329],[5,"Document",350],[10,"Deserializer",425],[5,"DocCollection",350],[17,"Item"],[10,"IntoIterator",426],[1,"f32"],[10,"Serializer",418]],"r":[[0,404],[1,117],[2,350],[5,406],[6,294],[8,267],[9,267],[10,192],[11,192],[13,192],[14,192],[15,329],[17,312],[19,396],[20,267],[22,400],[91,329]],"b":[[52,"impl-Debug-for-AnchorChainError"],[53,"impl-Display-for-AnchorChainError"],[57,"impl-From%3CError%3E-for-AnchorChainError"],[58,"impl-From%3COpenAIError%3E-for-AnchorChainError"],[59,"impl-From%3CError%3E-for-AnchorChainError"],[165,"impl-Chain%3CI,+O,+L%3E"],[166,"impl-Node-for-Chain%3CI,+O,+L%3E"],[371,"impl-From%3C%26str%3E-for-Document"],[372,"impl-From%3CString%3E-for-Document"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABkBKQACAAEABQAAAAcAAAAJAAMADgAEABQAAQAXAAgAIQAXADoAAgBAAAYASwACAE8AAABRAAAAWAAXAHEABAB6AAcAhAANAJYAAwChAAAApwAUAL8AAADIABoA5wADAPgAEwAQAQgAGgEAAB8BBQAoAQYAMAEAADQBBAA6AQUAQQEAAEUBBABLAQUAUwEAAFkBBABhAQ8AcgEAAHQBBQB8AQAAgAEMAA=="}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
